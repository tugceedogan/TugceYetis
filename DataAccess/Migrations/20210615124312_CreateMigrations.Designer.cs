// <auto-generated />
using System;
using Entities.Concrete.EntityFrameworkCore.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DataAccess.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20210615124312_CreateMigrations")]
    partial class CreateMigrations
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Entities.Concrete.comments", b =>
                {
                    b.Property<int>("comments_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("IsChecked")
                        .HasColumnType("bit");

                    b.Property<string>("comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("date")
                        .HasColumnType("datetime2");

                    b.Property<int>("date_id")
                        .HasColumnType("int");

                    b.Property<bool?>("state")
                        .HasColumnType("bit");

                    b.Property<int>("user_id")
                        .HasColumnType("int");

                    b.HasKey("comments_id");

                    b.ToTable("comments");
                });

            modelBuilder.Entity("Entities.Concrete.free_services", b =>
                {
                    b.Property<int>("free_services_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("InChecked")
                        .HasColumnType("bit");

                    b.Property<bool?>("state")
                        .HasColumnType("bit");

                    b.Property<string>("title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("free_services_id");

                    b.ToTable("free_services");
                });

            modelBuilder.Entity("Entities.Concrete.location", b =>
                {
                    b.Property<int>("location_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("IsChecked")
                        .HasColumnType("bit");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("image_id")
                        .HasColumnType("int");

                    b.Property<bool?>("state")
                        .HasColumnType("bit");

                    b.Property<string>("title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("location_id");

                    b.ToTable("location");
                });

            modelBuilder.Entity("Entities.Concrete.note", b =>
                {
                    b.Property<int>("note_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("IsChecked")
                        .HasColumnType("bit");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("state")
                        .HasColumnType("bit");

                    b.Property<string>("title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("note_id");

                    b.ToTable("note");
                });

            modelBuilder.Entity("Entities.Concrete.paid_services", b =>
                {
                    b.Property<int>("paid_services_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("InChecked")
                        .HasColumnType("bit");

                    b.Property<bool?>("state")
                        .HasColumnType("bit");

                    b.Property<string>("title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("paid_services_id");

                    b.ToTable("paid_services");
                });

            modelBuilder.Entity("Entities.Concrete.prices", b =>
                {
                    b.Property<int>("prices_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("IsChecked")
                        .HasColumnType("bit");

                    b.Property<int>("date_id")
                        .HasColumnType("int");

                    b.Property<int>("excursion_fee")
                        .HasColumnType("int");

                    b.Property<string>("information")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("one_people_price")
                        .HasColumnType("int");

                    b.Property<int>("seven_twelve_children_price")
                        .HasColumnType("int");

                    b.Property<bool?>("state")
                        .HasColumnType("bit");

                    b.Property<int>("three_people_price")
                        .HasColumnType("int");

                    b.Property<int>("three_six_children_price")
                        .HasColumnType("int");

                    b.Property<int>("tour_type")
                        .HasColumnType("int");

                    b.Property<int>("two_people_price")
                        .HasColumnType("int");

                    b.Property<int>("zero_two_children_price")
                        .HasColumnType("int");

                    b.HasKey("prices_id");

                    b.ToTable("prices");
                });

            modelBuilder.Entity("Entities.Concrete.tour", b =>
                {
                    b.Property<int>("tour_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("IsChecked")
                        .HasColumnType("bit");

                    b.Property<int>("bus_id")
                        .HasColumnType("int");

                    b.Property<int>("quant")
                        .HasColumnType("int");

                    b.Property<bool?>("state")
                        .HasColumnType("bit");

                    b.Property<string>("tour_description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tour_title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("tour_id");

                    b.ToTable("tour");
                });

            modelBuilder.Entity("Entities.Concrete.tour_date", b =>
                {
                    b.Property<int>("date_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("IsChecked")
                        .HasColumnType("bit");

                    b.Property<DateTime>("end_date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("start_date")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("state")
                        .HasColumnType("bit");

                    b.Property<int>("tour_id")
                        .HasColumnType("int");

                    b.HasKey("date_id");

                    b.ToTable("tour_date");
                });

            modelBuilder.Entity("Entities.Concrete.tour_free_services", b =>
                {
                    b.Property<int>("tour_free_services_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("free_services_id")
                        .HasColumnType("int");

                    b.Property<int>("tour_id")
                        .HasColumnType("int");

                    b.HasKey("tour_free_services_id");

                    b.ToTable("tour_free_services");
                });

            modelBuilder.Entity("Entities.Concrete.tour_image", b =>
                {
                    b.Property<int>("image_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("IsChecked")
                        .HasColumnType("bit");

                    b.Property<string>("image_title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("path_url")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("state")
                        .HasColumnType("bit");

                    b.Property<int>("tour_id")
                        .HasColumnType("int");

                    b.HasKey("image_id");

                    b.ToTable("tour_image");
                });

            modelBuilder.Entity("Entities.Concrete.tour_note", b =>
                {
                    b.Property<int>("tour_not_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("note_id")
                        .HasColumnType("int");

                    b.Property<int>("tour_id")
                        .HasColumnType("int");

                    b.HasKey("tour_not_id");

                    b.ToTable("tour_note");
                });

            modelBuilder.Entity("Entities.Concrete.tour_paid_services", b =>
                {
                    b.Property<int>("tour_paid_services_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("paid_services_id")
                        .HasColumnType("int");

                    b.Property<int>("tour_id")
                        .HasColumnType("int");

                    b.HasKey("tour_paid_services_id");

                    b.ToTable("tour_paid_services");
                });

            modelBuilder.Entity("Entities.Concrete.tour_program", b =>
                {
                    b.Property<int>("tour_program_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("IsChecked")
                        .HasColumnType("bit");

                    b.Property<int>("date_id")
                        .HasColumnType("int");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("hotel_id")
                        .HasColumnType("int");

                    b.Property<bool?>("state")
                        .HasColumnType("bit");

                    b.Property<string>("title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("tour_program_id");

                    b.ToTable("tour_program");
                });

            modelBuilder.Entity("Entities.Concrete.tour_program_location", b =>
                {
                    b.Property<int>("tour_prog_loc_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("location_id")
                        .HasColumnType("int");

                    b.Property<int>("tour_program_id")
                        .HasColumnType("int");

                    b.HasKey("tour_prog_loc_id");

                    b.ToTable("tour_program_location");
                });
#pragma warning restore 612, 618
        }
    }
}
